---
import type { Article } from '@domain'
import Segment from '../Segment.astro'
import Button from '../Button.astro'
import Modal from '../Modal.astro'
import Divider from '@components/Divider.astro'
import { match } from 'shulk'
import AddSectionForm from './AddSectionForm.astro'
interface Props {
	article: Article
}

const { article } = Astro.props
---

<div id="ShowArticle" x-data="{ generating: false, isAddSectionOpen: false }">
	<h1>{article.title}</h1>

	<Segment>
		{
			match(article).case({
				Pending: () => (
					<Button
						primary
						icon={'text_select_move_forward_character'}
						hx-patch={'/articles/' + article.slug + '/generate'}
						hx-target="#ShowArticle"
						loadOnClick
					>
						Generate
					</Button>
				),
				Generated: () => (
					<Button
						primary
						icon={'add'}
						x-on:click="isAddSectionOpen = true"
					>
						Add a section
					</Button>
				),
			})
		}
	</Segment>

	<Modal title="Add a section" open="isAddSectionOpen">
		<AddSectionForm articleSlug={article.slug} />
	</Modal>

	<Divider hidden />

	{
		article._state === 'Generated' && (
			<Segment>
				<section>{article.description.content}</section>

				{article.sections.map((section) => (
					<section>
						<h2>{section.title}</h2>
						<p>
							{section.content.split('\n').map((part) => (
								<p>{part}</p>
							))}
						</p>
					</section>
				))}

				<h2>Related to</h2>

				{article.relatedTo.map((art) => (
					<a href={'/articles/' + art.slug} style="text-decoration: none;">
						<Button>{art.title}</Button>
					</a>
				))}
			</Segment>
		)
	}
</div>
