---
import Segment from '@components/Segment.astro'
import Layout from '@layouts/Layout.astro'
import Form from '@components/Form.astro'
import type { ArticleCreationForm } from '@domain/articles/commands'
import { FieldConfig, onSubmit, type FormDefinition } from '@components/Form'
import { AlreadyPersisted, ArticleCommands } from '@domain'
import Breadcrumbs from '@components/Breadcrumbs.astro'

const { db } = Astro.locals.dependencies

const articleCreationForm: FormDefinition<ArticleCreationForm> = {
	title: {
		label: 'Title',
		required: true,
		config: FieldConfig.Text({}),
	},
}

const error = await onSubmit(Astro, articleCreationForm, async (input) => {
	const commandResult = await ArticleCommands.create(input, db)

	return commandResult.mapErr((err) =>
		err instanceof AlreadyPersisted
			? 'This article already exists.'
			: err.message,
	)
})

if (Astro.request.method === 'POST' && !error) {
	return Astro.redirect('/articles/')
}
---

<Layout title="New article">
	<Breadcrumbs
		path={[
			{ title: 'Articles', url: '/articles/' },
			{ title: 'New article' },
		]}
	/>
	<h1>New article</h1>

	<Segment>
		<Form definition={articleCreationForm} cols={1} {error} />
	</Segment>
</Layout>
